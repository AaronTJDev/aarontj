{"version":3,"sources":["component/Row.js","component/ProjectList.js","component/AddProject.js","component/Login.js","component/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Row","props","handleEditProject","setState","editMode","state","onChange","e","target","name","prevState","project","Object","assign","value","tech","link","onClick","preventDefault","split","axios","post","_id","then","res","console","log","data","this","key","id","className","type","map","technology","index","href","authenticated","Component","ProjectList","projects","get","catch","err","AddProject","htmlFor","Contact","username","passphrase","form","handleClick","App","user","colNum","alt","src","path","exact","render","component","to","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d411f1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Row extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            editMode: false,\n            project: this.props.project\n        }\n    }\n\n    handleEditProject = () => {\n        this.setState({editMode : ! this.state.editMode});\n    }\n\n    onChange = (e) => {\n        var target = e.target;\n        \n        if ( target.name === 'name' ){\n            this.setState( prevState => {\n                let project = Object.assign({}, prevState.project);\n                project.name = target.value;\n                return { project };\n              })\n        } else if ( target.name === 'tech' ){\n            this.setState( prevState => {\n                let project = Object.assign({}, prevState.project);\n                project.tech = target.value;\n                return { project };\n              })\n        } else if ( target.name === 'link' ){\n            this.setState( prevState => {\n                let project = Object.assign({}, prevState.project);\n                project.link = target.value;\n                return { project };\n              })\n        }\n    }\n\n    onClick = (e) => {\n        e.preventDefault(); \n        \n        var project = {\n            name: this.state.project.name,\n            tech: this.state.project.tech.split(','),\n            link: this.state.project.link\n        }\n\n        axios.post(`http://localhost:4000/projects/edit/${this.state.project._id}`, project ).then(\n            res => console.log(res.data)\n        )\n\n        this.setState({\n            editMode: false\n        })\n    }\n\n    render() {\n        let project = this.props.project;\n        var row = this.state.editMode   ?\n                    <tr key={this.props.id}>\n                        <td>{this.props.id + 1}</td>\n                        <td><input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"name\" id=\"project-name\" value={this.state.project.name} /></td>\n                        <td><input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"tech\" id=\"project-tech\" value={this.state.project.tech} /></td>\n                        <td><input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"link\" id=\"project-link\" value={this.state.project.link} /></td>\n                        <td><button onClick={this.onClick} className=\"btn btn-primary\" value=\"Add Project\" id=\"project-submit\">Update</button></td>\n                    </tr>\n                    :                    \n                    <tr key={this.props.id}>\n                        <td>{this.props.id + 1}</td>\n                        <td>{project.name}</td>\n                        <td>{project.tech.map( ( technology, index ) => <span className=\"badge badge-pill badge-primary\" key={index}>{technology}</span>)}</td>\n                        <td><a href={project.link}>{project.link}</a></td>\n                        {\n                            this.props.authenticated ?\n                            <td onClick={this.handleEditProject}>Edit</td> :\n                            null\n                        }\n                    </tr> \n\n                    \n        return (\n\n            row\n            \n        )            \n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Row from './Row';\n\nexport default class ProjectList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:4000/projects/')\n        .then( res => {\n            this.setState({ projects : res.data });\n        }).catch( err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"primary project-list col-md-8 col-12\">\n                <table className=\"table table-sm table-hover table-light secondary position-relative col-12\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Tech</th>\n                        <th>Link</th>\n                        { this.props.authenticated ? \n                            <th>Edit</th> :\n                            null\n                        }\n                    </tr>\n                </thead>\n                    <tbody>\n                        {\n                            this.state.projects.map( ( project, id )  => {\n                                return (\n                                    <Row project={ project } id={id} key={id} authenticated={this.props.authenticated} />\n                                )\n                                    \n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class AddProject extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: '',\n            tech: '',\n            link: ''\n        }\n    }\n\n    onChange = (e) => {\n        var target = e.target;\n        \n        if ( target.name === 'name' ){\n            this.setState({ name: target.value })\n        } else if ( target.name === 'tech' ){\n            this.setState({ tech: target.value})\n        } else if ( target.name === 'link' ){\n            this.setState({ link: target.value})\n        }\n    }\n\n    onClick = (e) => {\n        e.preventDefault(); \n        \n        const project = {\n            name: this.state.name,\n            tech: this.state.tech.split(','),\n            link: this.state.link\n        }\n\n        axios.post('http://localhost:4000/projects/add', project ).then(\n            res => console.log(res.data)\n        )\n\n        this.setState({\n            name: '',\n            tech: '',\n            link: ''\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"primary col-md-8 col-sm-12 col-12\">\n                <h1 className=\"col-12 text-center p-4\">Add Project</h1>\n                <form>\n                    <div className=\"form-group rounded\">\n                        <label htmlFor=\"name\" value=\"name\">Name</label>\n                        <input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"name\" id=\"project-name\" />\n                    </div>\n                    <div className=\"form-group rounded\">\n                        <label htmlFor=\"tech\" value=\"tech\">Tech</label>\n                        <input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"tech\" id=\"project-tech\" />\n                    </div>\n                    <div className=\"form-group rounded\">\n                        <label htmlFor=\"link\" value=\"link\">Link</label>\n                        <input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"link\" id=\"project-link\" />\n                    </div>\n                    <div className=\"form-group rounded text-right\" id=\"btn-control\">\n                        <button onClick={this.onClick} className=\"btn btn-primary\" value=\"Add Project\" id=\"project-submit\">Add Project</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\n\nexport default class Contact extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            passphrase: ''\n        }\n    }\n\n    onChange = (e) => {\n        let target = e.target;\n        console.log(target.value)\n        \n        if ( target.name === 'username' ){\n            this.setState({ username: target.value })\n        } else if ( target.name === 'passphrase'){\n            this.setState({ passphrase: target.value })\n        }\n    }\n\n    render() {\n        console.log(this.props)\n        var form =\n            <form id=\"authenticate\">\n                <div className=\"form-group rounded\">\n                    <label htmlFor=\"username\" value=\"username\">Username</label>\n                    <input onChange={this.onChange} className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" />\n                </div>\n                <div className=\"form-group rounded\">\n                    <label htmlFor=\"authenticate\" value=\"authenticate\">Passphrase</label>\n                    <input onChange={this.onChange} className=\"form-control\" type=\"password\" name=\"passphrase\" id=\"passphrase\" />\n                </div>\n                <div className=\"form-group rounded text-right\" id=\"btn-control\">\n                    <button onClick={() => this.props.handleClick(this.state.username, this.state.passphrase) } className=\"btn btn-primary\" value={{username: this.state.username, passphrase: this.state.passphrase}} id=\"project-submit\" type=\"button\">Authenitcate</button>\n                </div>\n            </form>\n\n        return (\n            <div className=\"primary col-md-8 col-sm-12 col-12\">\n                {\n                    this.props.authenticated ?\n                    <h1 className=\"col-12 success\">Success</h1> :\n                    form\n                }\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\n\nexport default function Contact () {\n    return (\n        <div className=\"primary col-md-8 col-sm-12 col-12\">\n            <h1 className=\"col-12 text-center p-8\">Contact</h1>\n            <div className=\"offset-md-2 col-md-8 col-12 contact-box\">\n                <h4 className=\"col-12 text-center p-8 mt-5\">aarontjdev@gmail.com</h4>\n                <h4 className=\"col-12 text-center p-8\">(559)-974-6201</h4>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport ProjectList from './component/ProjectList';\nimport AddProject from './component/AddProject';\nimport Login from './component/Login';\nimport Contact from './component/Contact';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from 'axios';\n\n\nexport default class App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      user:{},\n      authenticated: false,\n      colNum: 'col-4'\n    }\n  }\n\n  handleClick = (username, passphrase) => {\n\n    axios.get(`http://localhost:4000/user/${username}/${passphrase}` ).then(\n      res => {\n        if( res.data.username === \"admin\" ){\n          this.setState ({\n            authenticated: true,\n            user: res.data\n          })\n        }\n      }\n    )    \n  }\n\n  render () {\n    return (\n      <Router>\n        <div className=\"container main\">\n          <div className=\"row\">\n            <h2 className=\"text-center primary col-12 p-2\">Portfolio</h2>\n          </div>\n          <div className=\"row\">\n            <div className=\"profile secondary col-md-4 col-12\">\n              <img className=\"rounded-circle profile-pic mx-auto\" alt=\"Aaron Jackson\" src=\"img/profile.jpeg\"/>\n              <h4 className=\"text-center primary position-relative profile-text\">Aaron Jackson</h4>\n              <p className=\"text-left position-relative profile-text alternative\">2+ Years of experience, knowledgeable and highly dynamic Full Stack Web Developer with a track record of creating user-centric solutions to improve customer satisfaction and web presence.</p>\n              <p className=\"text-left position-relative profile-text alternative\">I enjoy my craft and I'm constantly striving to deliver highly efficient and scalable software solutions.</p>\n              <p className=\"text-left position-relative profile-text alternative\">I invite you to explore some of projects I've worked on throughout my career and see for yourself!</p>\n            </div>\n            \n            <Route path=\"/\" exact render = { () => <ProjectList authenticated={this.state.authenticated} /> } />\n            <Route path=\"/add\" component = { AddProject } />\n            <Route path=\"/login\" render = { () => <Login handleClick={this.handleClick} authenticated={this.state.authenticated} /> } />\n            <Route path=\"/contact\" component = { Contact } />\n\n          </div>\n          <nav className=\"fixed-bottom navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"col-4\" to=\"/\">HOME</Link>\n            {\n              this.state.authenticated ?\n                <Link className=\"col-4\" to=\"/add\">ADD</Link> :\n                <Link className=\"col-4\" to=\"/login\">LOGIN</Link>\n            }\n            <Link className=\"col-4\" to=\"/contact\">CONTACT</Link>\n          </nav>\n\n        </div>\n\n      </Router>\n    );\n  }  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}